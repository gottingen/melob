//
// Copyright (C) 2024 EA group inc.
// Author: Jeff.li lijippy@163.com
// All rights reserved.
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as published
// by the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Affero General Public License for more details.
//
// You should have received a copy of the GNU Affero General Public License
// along with this program.  If not, see <https://www.gnu.org/licenses/>.
//
//


syntax="proto2";
// mcpack2pb - Make protobuf be front-end of mcpack/compack

import "google/protobuf/descriptor.proto";

extend google.protobuf.FileOptions {
  // True to generate mcpack parsing/serializing code
  optional bool idl_support = 91000;
}

enum ConvertibleIdlType {
  IDL_AUTO = 0;
  IDL_INT8 = 1;
  IDL_INT16 = 2;
  IDL_INT32 = 3;
  IDL_INT64 = 4;
  IDL_UINT8 = 5;
  IDL_UINT16 = 6;
  IDL_UINT32 = 7;
  IDL_UINT64 = 8;
  IDL_BOOL = 9;
  IDL_FLOAT = 10;
  IDL_DOUBLE = 11;
  IDL_BINARY = 12;
  IDL_STRING = 13;
}

extend google.protobuf.FieldOptions {
  // Mark the idl-type which is inconsistent with proto-type.
  optional ConvertibleIdlType idl_type = 91001;

  // Mark the non-optional() vector/array in idl.
  optional int32 idl_on = 91002;

  // Use this name as the field name for packing instead of the one in proto.
  optional string idl_name = 91003;
}
