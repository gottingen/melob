//
// Copyright (C) 2024 EA group inc.
// Author: Jeff.li lijippy@163.com
// All rights reserved.
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as published
// by the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Affero General Public License for more details.
//
// You should have received a copy of the GNU Affero General Public License
// along with this program.  If not, see <https://www.gnu.org/licenses/>.
//
//


syntax="proto2";
import "melon/proto/rpc/options.proto";
import "melon/proto/rpc/streaming_rpc_meta.proto";

package melon.policy;
option java_package="com.melon.policy";
option java_outer_classname="BaiduRpcProto";

message RpcMeta {
    optional RpcRequestMeta request = 1;
    optional RpcResponseMeta response = 2;
    optional int32 compress_type = 3;
    optional int64 correlation_id = 4;
    optional int32 attachment_size = 5;
    optional ChunkInfo chunk_info = 6;
    optional bytes authentication_data = 7;
    optional StreamSettings stream_settings = 8;
    map<string, string> user_fields = 9;
}

message RpcRequestMeta {
    required string service_name = 1;
    required string method_name = 2;
    optional int64 log_id = 3;
    optional int64 trace_id = 4;
    optional int64 span_id = 5;
    optional int64 parent_span_id = 6;
    optional string request_id = 7; // correspond to x-request-id in http header
    optional int32 timeout_ms = 8;  // client's timeout setting for current call
}

message RpcResponseMeta {
    optional int32 error_code = 1;
    optional string error_text = 2;
}
